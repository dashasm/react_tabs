{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","handleSelected","className","map","tab","classNames","id","href","onClick","checkHandleSelected","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAUaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,eAQvB,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IACT,CAAE,YAAaL,IAAkBI,EAAIE,KAHzC,SAME,mBACEC,KAAI,WAAMH,EAAIE,IACdE,QAAS,kBAnBK,SAACJ,GACvBA,EAAIE,KAAON,GACbC,EAAeG,GAiBUK,CAAoBL,IAFrC,SAIGA,EAAIM,SATFN,EAAIE,WAgBhBP,EAAKI,KAAI,SAAAC,GAAG,OAAKA,EAAIE,KAAON,GAC3B,qBACEE,UAAU,QACV,UAAQ,cAFV,SAKGE,EAAIO,SAFAP,EAAIE,WCtCNP,EAAc,CACzB,CAAEO,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASd,EAAK,IAApD,mBAAOe,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,EAAYJ,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAec,EAAYR,GAC3BL,eAAgBc,QCtBxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.06ed8907.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  handleSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, handleSelected },\n) => {\n  const checkHandleSelected = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      handleSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames(\n                { 'is-active': selectedTabId === tab.id },\n              )}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => checkHandleSelected(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {tabs.map(tab => (tab.id === selectedTabId && (\n        <div\n          className=\"block\"\n          data-cy=\"tab-content\"\n          key={tab.id}\n        >\n          {tab.content}\n        </div>\n      )))}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        handleSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}